<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="get_training_filelist">
<interface>
<ic>
<par name="data_path" base_type="ctrl" dimension="0"/>
<par name="min_training_set" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="model_files" base_type="ctrl" dimension="0"/>
<par name="iFlag" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>iFlag := 0</l>
<l>model_files:=[]</l>
<l>try</l>
<l>    list_files (data_path, ['directories'], Dirs)</l>
<l>    if (|Dirs|==0)</l>
<l>        iFlag := -1</l>
<l>        return ()</l>
<l>    endif</l>
<l>    for index := 0 to |Dirs|-1 by 1</l>
<l>        list_files (Dirs[index], 'files', ImageFiles)</l>
<l>        tuple_regexp_select (model_files, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|raw)$','ignore_case'], ImageFiles)</l>
<l>    endfor</l>
<l>    if (|model_files| &lt; min_training_set)</l>
<l>        iFlag := -1</l>
<l>        return ()</l>
<l>    endif</l>
<l>catch (Exception)</l>
<l>    iFlag := -1</l>
<l>endtry</l>
<l>return ()</l>
</body>
<docu id="get_training_filelist">
<parameters>
<parameter id="data_path"/>
<parameter id="iFlag"/>
<parameter id="min_training_set"/>
<parameter id="model_files"/>
</parameters>
</docu>
</procedure>
</hdevelop>
